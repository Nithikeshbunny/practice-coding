#include <iostream>
#include <vector>
#include <string>
#include <algorithm>

using namespace std;

class Book {
public:
    string title;
    string author;
    string isbn;
    bool isAvailable;

    Book(string t, string a, string i) : title(t), author(a), isbn(i), isAvailable(true) {}
};

class Library {
private:
    vector<Book> books;

public:
    void addBook(string title, string author, string isbn) {
        books.push_back(Book(title, author, isbn));
        cout << "Book added successfully." << endl;
    }

    void issueBook(string title) {
        for (auto& book : books) {
            if (book.title == title && book.isAvailable) {
                book.isAvailable = false;
                cout << "Book issued successfully." << endl;
                return;
            }
        }
        cout << "Book not available or not found." << endl;
    }

    void returnBook(string title) {
        for (auto& book : books) {
            if (book.title == title && !book.isAvailable) {
                book.isAvailable = true;
                cout << "Book returned successfully." << endl;
                return;
            }
        }
        cout << "Book not found or already available." << endl;
    }

    void displayBooks() {
        if (books.empty()) {
            cout << "No books in the library." << endl;
            return;
        }
        for (const auto& book : books) {
            cout << "Title: " << book.title << ", Author: " << book.author 
                 << ", ISBN: " << book.isbn << ", Available: " 
                 << (book.isAvailable ? "Yes" : "No") << endl;
        }
    }

    void searchBook(string title) {
        for (const auto& book : books) {
            if (book.title == title) {
                cout << "Title: " << book.title << ", Author: " << book.author 
                     << ", ISBN: " << book.isbn << ", Available: " 
                     << (book.isAvailable ? "Yes" : "No") << endl;
                return;
            }
        }
        cout << "Book not found." << endl;
    }
};

int main() {
    Library lib;
    int choice;
    string title, author, isbn;

    while (true) {
        cout << "\nLibrary Management System" << endl;
        cout << "1. Add Book" << endl;
        cout << "2. Issue Book" << endl;
        cout << "3. Return Book" << endl;
        cout << "4. Display Books" << endl;
        cout << "5. Search Book" << endl;
        cout << "6. Exit" << endl;
        cout << "Enter choice: ";
        cin >> choice;
        cin.ignore(); // To handle newline after int input

        switch (choice) {
            case 1:
                cout << "Enter title: ";
                getline(cin, title);
                cout << "Enter author: ";
                getline(cin, author);
                cout << "Enter ISBN: ";
                getline(cin, isbn);
                lib.addBook(title, author, isbn);
                break;
            case 2:
                cout << "Enter title to issue: ";
                getline(cin, title);
                lib.issueBook(title);
                break;
            case 3:
                cout << "Enter title to return: ";
                getline(cin, title);
                lib.returnBook(title);
                break;
            case 4:
                lib.displayBooks();
                break;
            case 5:
                cout << "Enter title to search: ";
                getline(cin, title);
                lib.searchBook(title);
                break;
            case 6:
                cout << "Exiting..." << endl;
                return 0;
            default:
                cout << "Invalid choice." << endl;
        }
    }
    return 0;
}
